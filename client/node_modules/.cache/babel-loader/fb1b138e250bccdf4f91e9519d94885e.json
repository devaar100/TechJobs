{"ast":null,"code":"var _jsxFileName = \"/Users/aarnavjindal/WebstormProjects/techjobs/client/src/components/profile-list.component.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Pagination as RBPagination } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport * as Icons from \"react-ionicons\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = 'https://techjobs100.herokuapp.com/'; // const URL = 'http://localhost:4000/'\n\nconst Profile = ({\n  profile\n}) => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `${profile.name}, ${profile.gender}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: profile.email,\n          children: profile.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `${profile.year} year, ${profile.branch_full} ( CGPA - ${profile.cgpa})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `${profile.college_full} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"CodeChef Rating -  \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: profile.cc,\n          children: profile.cc_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"CodeForces Rating -  \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: profile.cf,\n          children: profile.cf_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `Open source experience - ${profile.open_source}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `Experience - ${profile.work_ex}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `Miscellaneous - ${profile.miscellaneous}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icons.LogoGithub, {\n          style: styles.icon,\n          height: \"30px\",\n          width: \"30px\",\n          onClick: () => window.open(profile.github, \"_blank\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Icons.LogoLinkedin, {\n          style: styles.icon,\n          height: \"30px\",\n          width: \"30px\",\n          onClick: () => window.open(profile.linkedin, \"_blank\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Icons.Document, {\n          style: styles.icon,\n          height: \"30px\",\n          width: \"30px\",\n          onClick: () => window.open(profile.resume, \"_blank\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, profile.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Profile;\nconst colleges = [{\n  value: 0,\n  label: 'IIT'\n}, {\n  value: 1,\n  label: 'NIT'\n}, {\n  value: 2,\n  label: 'DTU'\n}, {\n  value: 3,\n  label: 'NSIT'\n}, {\n  value: 4,\n  label: 'IIIT'\n}, {\n  value: 5,\n  label: 'BITS'\n}, {\n  value: 6,\n  label: 'VIT'\n}, {\n  value: 7,\n  label: 'Other'\n}];\nconst genders = [{\n  value: 0,\n  label: 'Male'\n}, {\n  value: 1,\n  label: 'Female'\n}];\nconst years = [{\n  value: 0,\n  label: '1st'\n}, {\n  value: 1,\n  label: '2nd'\n}, {\n  value: 2,\n  label: '3rd'\n}, {\n  value: 4,\n  label: '4th'\n}, {\n  value: 4,\n  label: '5th'\n}, {\n  value: 5,\n  label: 'Recent graduate'\n}];\nconst sortTypes = [{\n  value: 0,\n  label: 'CodeChef Rating'\n}, {\n  value: 1,\n  label: 'CodeForces Rating'\n}, {\n  value: 2,\n  label: 'None'\n}];\nconst cgpas = [{\n  value: 0,\n  label: 'Below 8'\n}, {\n  value: 1,\n  label: '8+'\n}, {\n  value: 2,\n  label: '8.5+'\n}, {\n  value: 3,\n  label: '9+'\n}, {\n  value: 4,\n  label: '9.5+'\n}];\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number\n};\nconst defaultProps = {\n  initialPage: 1\n};\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage(page) {\n    const items = this.props.items; // get new pager object for specified page\n\n    const pager = this.getPager(items.length, page);\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    } // get new page of items from items array\n\n\n    const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n    this.setState({\n      pager: pager\n    }); // call change page function in parent component\n\n    this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1; // default page size is 10\n\n    pageSize = pageSize || 10; // calculate total pages\n\n    const totalPages = Math.ceil(totalItems / pageSize);\n    let startPage, endPage;\n\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    } // calculate start and end item indexes\n\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // return object with all pager properties required by the view\n\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    const pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return (\n      /*#__PURE__*/\n      // <ul className=\"pagination\">\n      //     <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n      //         <a onClick={() => this.setPage(1)}>First</a>\n      //     </li>\n      //     <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n      //         <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n      //     </li>\n      //     {pager.pages.map((page, index) =>\n      //         <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n      //             <a onClick={() => this.setPage(page)}>{page}</a>\n      //         </li>\n      //     )}\n      //     <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n      //         <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n      //     </li>\n      //     <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n      //         <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n      //     </li>\n      // </ul>\n      _jsxDEV(RBPagination, {\n        children: [/*#__PURE__*/_jsxDEV(RBPagination.First, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RBPagination.Prev, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RBPagination.Next, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RBPagination.Last, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default class ProfileList extends Component {\n  componentDidMount() {\n    axios.get(`${URL}profiles/`).then(response => {\n      console.log(response);\n      this.setState({\n        profiles: response.data,\n        loading: false\n      });\n      this.updateProfiles({});\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      pageOfItems: [],\n      colleges: colleges,\n      selectedColleges: colleges.map(item => item.label),\n      genders: genders,\n      selectedGenders: genders.map(item => item.label),\n      sortTypes: sortTypes,\n      selectedSortType: sortTypes[2].label,\n      years: years,\n      selectedYears: years.map(item => item.label),\n      cgpas: cgpas,\n      selectedCGPAs: cgpas.map(item => item.label),\n      profiles: null,\n      selectedProfiles: null\n    };\n    this.onChangePage = this.onChangePage.bind(this);\n  }\n\n  onChangePage(pageOfItems) {\n    this.setState({\n      pageOfItems: pageOfItems\n    });\n  }\n\n  updateProfiles(update) {\n    let newState = Object.assign({}, this.state, update);\n    let selectedProfiles = this.state.profiles.filter(profile => {\n      return newState.selectedGenders.includes(profile.gender) && newState.selectedColleges.includes(profile.college) && newState.selectedYears.includes(profile.year) && newState.selectedCGPAs.includes(profile.cgpa);\n    });\n\n    if (newState.selectedSortType !== 'None') {\n      switch (update['selectedSortType']) {\n        case 'CodeChef Rating':\n          selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cc_rating - p1.cc_rating);\n          break;\n\n        case 'CodeForces Rating':\n          selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cf_rating - p1.cf_rating);\n          break;\n      }\n    }\n\n    newState = Object.assign({}, newState, {\n      selectedProfiles: selectedProfiles\n    });\n    this.setState(newState);\n  }\n\n  handleColleges(e) {\n    if (e === null || e.length === 0) e = this.state.colleges;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedColleges: e\n    });\n  }\n\n  handleSortType(e) {\n    if (e === null || e.length === 0) e = this.state.sortTypes[2].label;\n    e = e.label;\n    this.updateProfiles({\n      selectedSortType: e\n    });\n  }\n\n  handleGender(e) {\n    if (e === null || e.length === 0) e = this.state.genders;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedGenders: e\n    });\n  }\n\n  handleYears(e) {\n    if (e === null || e.length === 0) e = this.state.years;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedYears: e\n    });\n  }\n\n  handleCGPAs(e) {\n    if (e === null || e.length === 0) e = this.state.cgpas;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedCGPAs: e\n    });\n  }\n\n  render() {\n    var _this$state$selectedP, _this$state$selectedP2;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 3,\n            style: {\n              padding: 20,\n              paddingTop: 15\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by college\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.colleges,\n              onChange: this.handleColleges.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.years,\n              onChange: this.handleYears.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.genders,\n              onChange: this.handleGender.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by cgpa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.cgpas,\n              onChange: this.handleCGPAs.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Sort by platform rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: this.state.sortTypes[2],\n              options: this.state.sortTypes,\n              onChange: this.handleSortType.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: ((_this$state$selectedP = this.state.selectedProfiles) === null || _this$state$selectedP === void 0 ? void 0 : _this$state$selectedP.length) ? this.state.pageOfItems.map((item, index) => /*#__PURE__*/_jsxDEV(Profile, {\n              profile: item,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"No profiles match the provided filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 3,\n            style: {\n              padding: 15,\n              paddingLeft: 25,\n              paddingRight: 25,\n              fontSize: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"A lifetime ago, I too sought the stones. I even held one in my hand. But it cast me out, banished me here, guiding others to a treasure I cannot possess.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 29\n            }, this), \"I have been a prey to missing out on important opportunities simply because I wasn't aware of their existence. This initiative is to help all college students out there never to miss important job listings from top-notch companies\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 10,\n            className: \"text-center\",\n            children: ((_this$state$selectedP2 = this.state.selectedProfiles) === null || _this$state$selectedP2 === void 0 ? void 0 : _this$state$selectedP2.length) ? /*#__PURE__*/_jsxDEV(Pagination, {\n              items: this.state.selectedProfiles,\n              onChangePage: this.onChangePage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 33\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\nconst styles = {\n  container: {\n    marginTop: 15,\n    marginBottom: 15,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#cccccc\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 25,\n    paddingRight: 25\n  },\n  text: {\n    fontSize: 18\n  },\n  icon: {\n    marginTop: 10,\n    marginRight: 10\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/aarnavjindal/WebstormProjects/techjobs/client/src/components/profile-list.component.js"],"names":["React","Component","Container","Row","Col","Pagination","RBPagination","Select","PropTypes","Icons","axios","URL","Profile","profile","styles","container","text","name","gender","email","year","branch_full","cgpa","college_full","cc","cc_rating","cf","cf_rating","open_source","work_ex","miscellaneous","icon","window","open","github","linkedin","resume","id","colleges","value","label","genders","years","sortTypes","cgpas","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","defaultProps","constructor","props","state","pager","componentWillMount","length","setPage","componentDidUpdate","prevProps","prevState","page","getPager","totalPages","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","render","ProfileList","componentDidMount","get","then","response","console","log","profiles","data","loading","updateProfiles","catch","error","selectedColleges","item","selectedGenders","selectedSortType","selectedYears","selectedCGPAs","selectedProfiles","bind","update","newState","Object","assign","filter","includes","college","sort","p1","p2","handleColleges","e","handleSortType","handleGender","handleYears","handleCGPAs","padding","paddingTop","index","paddingLeft","paddingRight","fontSize","marginTop","marginBottom","borderStyle","borderWidth","borderRadius","borderColor","paddingBottom","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Container,\n    Row, Col,\n    Pagination as RBPagination\n} from \"react-bootstrap\"\nimport Select from \"react-select\"\nimport PropTypes from \"prop-types\"\nimport * as Icons from \"react-ionicons\";\nimport axios from 'axios';\nconst URL = 'https://techjobs100.herokuapp.com/'\n// const URL = 'http://localhost:4000/'\n\nconst Profile = ({ profile }) => {\n\n    return (\n        <Row style={styles.container} key={profile.id}>\n            <Col>\n                <Row style={styles.text}>{`${profile.name}, ${profile.gender}`}</Row>\n                <Row style={styles.text}><a href={profile.email}>{profile.email}</a></Row>\n                <Row style={styles.text}>{`${profile.year} year, ${profile.branch_full} ( CGPA - ${profile.cgpa})`}</Row>\n                <Row style={styles.text}>{`${profile.college_full} `}</Row>\n                <Row style={styles.text}>{\"CodeChef Rating -  \"}<a href={profile.cc}>{profile.cc_rating}</a></Row>\n                <Row style={styles.text}>{\"CodeForces Rating -  \"}<a href={profile.cf}>{profile.cf_rating}</a></Row>\n                <Row style={styles.text}>{`Open source experience - ${profile.open_source}`}</Row>\n                <Row style={styles.text}>{`Experience - ${profile.work_ex}`}</Row>\n                <Row style={styles.text}>{`Miscellaneous - ${profile.miscellaneous}`}</Row>\n                <Row>\n                    <Icons.LogoGithub\n                        style={styles.icon}\n                        height=\"30px\"\n                        width=\"30px\"\n                        onClick={() => window.open(profile.github, \"_blank\")}\n                    />\n                    <Icons.LogoLinkedin\n                        style={styles.icon}\n                        height=\"30px\"\n                        width=\"30px\"\n                        onClick={() => window.open(profile.linkedin, \"_blank\")}\n                    />\n                    <Icons.Document\n                        style={styles.icon}\n                        height=\"30px\"\n                        width=\"30px\"\n                        onClick={() => window.open(profile.resume, \"_blank\")}\n                    />\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\n\nconst colleges = [\n    {value: 0, label: 'IIT'},\n    {value: 1, label: 'NIT'},\n    {value: 2, label: 'DTU'},\n    {value: 3, label: 'NSIT'},\n    {value: 4, label: 'IIIT'},\n    {value: 5, label: 'BITS'},\n    {value: 6, label: 'VIT'},\n    {value: 7, label: 'Other'}\n];\nconst genders = [{value: 0, label: 'Male'}, {value: 1, label: 'Female'}];\nconst years = [{value: 0, label: '1st'}, {value: 1, label: '2nd'}, {value: 2, label: '3rd'}, {value: 4, label: '4th'}, {value: 4, label: '5th'}, {value: 5, label: 'Recent graduate'}];\nconst sortTypes = [{value: 0, label: 'CodeChef Rating'}, {value: 1, label: 'CodeForces Rating'}, { value: 2, label: 'None'}]\nconst cgpas = [{value: 0, label: 'Below 8'}, {value: 1, label: '8+'}, {value: 2, label: '8.5+'}, {value: 3, label: '9+'}, {value: 4, label: '9.5+'}];\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {pager: {}};\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n        const items = this.props.items;\n        // get new pager object for specified page\n        const pager = this.getPager(items.length, page);\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new page of items from items array\n        const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({pager: pager});\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculate total pages\n        const totalPages = Math.ceil(totalItems / pageSize);\n\n        let startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        const startIndex = (currentPage - 1) * pageSize;\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        const pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        const pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            // <ul className=\"pagination\">\n            //     <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n            //         <a onClick={() => this.setPage(1)}>First</a>\n            //     </li>\n            //     <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n            //         <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n            //     </li>\n            //     {pager.pages.map((page, index) =>\n            //         <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n            //             <a onClick={() => this.setPage(page)}>{page}</a>\n            //         </li>\n            //     )}\n            //     <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n            //         <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n            //     </li>\n            //     <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n            //         <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n            //     </li>\n            // </ul>\n            <RBPagination>\n                <RBPagination.First />\n                <RBPagination.Prev />\n                <RBPagination.Next />\n                <RBPagination.Last />\n            </RBPagination>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default class ProfileList extends Component {\n\n    componentDidMount() {\n        axios.get(`${URL}profiles/`)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    profiles: response.data,\n                    loading: false,\n                })\n                this.updateProfiles({})\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            pageOfItems: [],\n            colleges: colleges,\n            selectedColleges: colleges.map(item => item.label),\n            genders: genders,\n            selectedGenders: genders.map(item => item.label),\n            sortTypes: sortTypes,\n            selectedSortType: sortTypes[2].label,\n            years: years,\n            selectedYears: years.map(item => item.label),\n            cgpas: cgpas,\n            selectedCGPAs: cgpas.map(item => item.label),\n            profiles: null,\n            selectedProfiles: null\n        };\n\n        this.onChangePage = this.onChangePage.bind(this);\n    }\n\n    onChangePage(pageOfItems) {\n        this.setState({pageOfItems: pageOfItems});\n    }\n\n    updateProfiles(update) {\n        let newState = Object.assign({}, this.state, update)\n        let selectedProfiles = this.state.profiles.filter(profile => {\n            return (\n                newState.selectedGenders.includes(profile.gender) &&\n                newState.selectedColleges.includes(profile.college) &&\n                newState.selectedYears.includes(profile.year) &&\n                newState.selectedCGPAs.includes(profile.cgpa)\n            )\n        })\n        if(newState.selectedSortType !== 'None' ) {\n            switch (update['selectedSortType']) {\n                case 'CodeChef Rating' :\n                    selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cc_rating - p1.cc_rating)\n                    break;\n                case 'CodeForces Rating' :\n                    selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cf_rating - p1.cf_rating)\n                    break;\n            }\n        }\n        newState = Object.assign({}, newState, {selectedProfiles: selectedProfiles})\n        this.setState(newState)\n    }\n\n    handleColleges(e) {\n        if (e === null || e.length === 0) e = this.state.colleges\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedColleges: e})\n    }\n\n    handleSortType(e) {\n        if (e === null || e.length === 0) e = this.state.sortTypes[2].label\n        e = e.label\n        this.updateProfiles({selectedSortType: e})\n    }\n\n    handleGender(e) {\n        if (e === null || e.length === 0) e = this.state.genders\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedGenders: e})\n    }\n\n    handleYears(e) {\n        if (e === null || e.length === 0) e = this.state.years\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedYears: e})\n    }\n\n    handleCGPAs(e) {\n        if (e === null || e.length === 0) e = this.state.cgpas\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedCGPAs: e})\n    }\n\n    render() {\n        return (\n            <>\n                <Container fluid>\n                    <Row>\n                        <Col sm={12} md={3} style={{padding: 20, paddingTop: 15}}>\n                            <h6>Filter by college</h6>\n                            <Select options={this.state.colleges} onChange={this.handleColleges.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Filter by year</h6>\n                            <Select options={this.state.years} onChange={this.handleYears.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Filter by gender</h6>\n                            <Select options={this.state.genders} onChange={this.handleGender.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Filter by cgpa</h6>\n                            <Select options={this.state.cgpas} onChange={this.handleCGPAs.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Sort by platform rating</h6>\n                            <Select defaultValue={this.state.sortTypes[2]} options={this.state.sortTypes}\n                                    onChange={this.handleSortType.bind(this)}/>\n                            <br/>\n                        </Col>\n                        <Col sm={12} md={6}>\n                            {this.state.selectedProfiles?.length ? this.state.pageOfItems.map((item, index) =>\n                                <Profile profile={item} index={index}/> ) :\n                                <h5>No profiles match the provided filters</h5>\n                            }\n                        </Col>\n                        <Col sm={12} md={3} style={{padding: 15, paddingLeft: 25, paddingRight: 25, fontSize: 16}}>\n                            <i>A lifetime ago, I too sought the stones. I even held one in my hand. But it cast me out,\n                                banished me here, guiding others to a treasure I cannot possess.</i>\n                            <br/>\n                            <br/>\n                            I have been a prey to missing out on important opportunities simply because I wasn't aware\n                            of their existence. This initiative is to help all college students out there never to miss\n                            important job listings from top-notch companies\n                        </Col>\n                    </Row>\n                    <Row className=\"text-center\">\n                        <Col xs={1}/>\n                        <Col xs={10} className=\"text-center\">\n                            {this.state.selectedProfiles?.length ?\n                                <Pagination\n                                    items={this.state.selectedProfiles}\n                                    onChangePage={this.onChangePage}/> : null\n                            }\n                        </Col>\n                        <Col xs={1}/>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\n\nconst styles = {\n    container: {\n        marginTop: 15,\n        marginBottom: 15,\n        borderStyle: \"solid\",\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: \"#cccccc\",\n        paddingTop: 15,\n        paddingBottom: 15,\n        paddingLeft: 25,\n        paddingRight: 25\n    },\n    text: {\n        fontSize: 18\n    },\n    icon: {\n        marginTop: 10,\n        marginRight: 10\n    }\n}\n"]},"metadata":{},"sourceType":"module"}