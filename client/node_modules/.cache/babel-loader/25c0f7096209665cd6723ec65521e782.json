{"ast":null,"code":"/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    invariant(false, 'Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","map":{"version":3,"sources":["/Users/aarnavjindal/WebstormProjects/techjobs/client/node_modules/react-ionicons/node_modules/prop-types/factoryWithThrowingShims.js"],"names":["emptyFunction","require","invariant","ReactPropTypesSecret","module","exports","shim","props","propName","componentName","location","propFullName","secret","isRequired","getShim","ReactPropTypes","array","bool","func","number","object","string","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","oneOfType","shape","checkPropTypes","PropTypes"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,aAAa,GAAGC,OAAO,CAAC,wBAAD,CAA3B;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIE,oBAAoB,GAAGF,OAAO,CAAC,4BAAD,CAAlC;;AAEAG,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,WAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsEC,MAAtE,EAA8E;AAC5E,QAAIA,MAAM,KAAKT,oBAAf,EAAqC;AACnC;AACA;AACD;;AACDD,IAAAA,SAAS,CACP,KADO,EAEP,yFACA,+CADA,GAEA,gDAJO,CAAT;AAMD;;AAAA;AACDI,EAAAA,IAAI,CAACO,UAAL,GAAkBP,IAAlB;;AACA,WAASQ,OAAT,GAAmB;AACjB,WAAOR,IAAP;AACD;;AAAA,GAhByB,CAiB1B;AACA;;AACA,MAAIS,cAAc,GAAG;AACnBC,IAAAA,KAAK,EAAEV,IADY;AAEnBW,IAAAA,IAAI,EAAEX,IAFa;AAGnBY,IAAAA,IAAI,EAAEZ,IAHa;AAInBa,IAAAA,MAAM,EAAEb,IAJW;AAKnBc,IAAAA,MAAM,EAAEd,IALW;AAMnBe,IAAAA,MAAM,EAAEf,IANW;AAOnBgB,IAAAA,MAAM,EAAEhB,IAPW;AASnBiB,IAAAA,GAAG,EAAEjB,IATc;AAUnBkB,IAAAA,OAAO,EAAEV,OAVU;AAWnBW,IAAAA,OAAO,EAAEnB,IAXU;AAYnBoB,IAAAA,UAAU,EAAEZ,OAZO;AAanBa,IAAAA,IAAI,EAAErB,IAba;AAcnBsB,IAAAA,QAAQ,EAAEd,OAdS;AAenBe,IAAAA,KAAK,EAAEf,OAfY;AAgBnBgB,IAAAA,SAAS,EAAEhB,OAhBQ;AAiBnBiB,IAAAA,KAAK,EAAEjB;AAjBY,GAArB;AAoBAC,EAAAA,cAAc,CAACiB,cAAf,GAAgChC,aAAhC;AACAe,EAAAA,cAAc,CAACkB,SAAf,GAA2BlB,cAA3B;AAEA,SAAOA,cAAP;AACD,CA3CD","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"]},"metadata":{},"sourceType":"script"}