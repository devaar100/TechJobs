{"ast":null,"code":"var _jsxFileName = \"/Users/aarnavjindal/WebstormProjects/techjobs/client/src/components/profile-list.component.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Pagination } from \"react-bootstrap\";\nimport Select from \"react-select\";\nimport PropTypes from \"prop-types\";\nimport * as Icons from \"react-ionicons\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = 'https://techjobs100.herokuapp.com/'; // const URL = 'http://localhost:4000/'\n\nconst Profile = ({\n  profile\n}) => {\n  return /*#__PURE__*/_jsxDEV(Row, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `${profile.name}, ${profile.gender}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: profile.email,\n          children: profile.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `${profile.year} year, ${profile.branch_full} ( CGPA - ${profile.cgpa})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `${profile.college_full} `\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"CodeChef Rating -  \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: profile.cc,\n          children: profile.cc_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 65\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"CodeForces Rating -  \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: profile.cf,\n          children: profile.cf_rating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `Open source experience - ${profile.open_source}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `Experience - ${profile.work_ex}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: `Miscellaneous - ${profile.miscellaneous}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Icons.LogoGithub, {\n          style: styles.icon,\n          height: \"30px\",\n          width: \"30px\",\n          onClick: () => window.open(profile.github, \"_blank\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Icons.LogoLinkedin, {\n          style: styles.icon,\n          height: \"30px\",\n          width: \"30px\",\n          onClick: () => window.open(profile.linkedin, \"_blank\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Icons.Document, {\n          style: styles.icon,\n          height: \"30px\",\n          width: \"30px\",\n          onClick: () => window.open(profile.resume, \"_blank\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, profile.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Profile;\nconst colleges = [{\n  value: 0,\n  label: 'IIT'\n}, {\n  value: 1,\n  label: 'NIT'\n}, {\n  value: 2,\n  label: 'DTU'\n}, {\n  value: 3,\n  label: 'NSIT'\n}, {\n  value: 4,\n  label: 'IIIT'\n}, {\n  value: 5,\n  label: 'BITS'\n}, {\n  value: 6,\n  label: 'VIT'\n}, {\n  value: 7,\n  label: 'Other'\n}];\nconst genders = [{\n  value: 0,\n  label: 'Male'\n}, {\n  value: 1,\n  label: 'Female'\n}];\nconst years = [{\n  value: 0,\n  label: '1st'\n}, {\n  value: 1,\n  label: '2nd'\n}, {\n  value: 2,\n  label: '3rd'\n}, {\n  value: 4,\n  label: '4th'\n}, {\n  value: 4,\n  label: '5th'\n}, {\n  value: 5,\n  label: 'Recent graduate'\n}];\nconst sortTypes = [{\n  value: 0,\n  label: 'CodeChef Rating'\n}, {\n  value: 1,\n  label: 'CodeForces Rating'\n}, {\n  value: 2,\n  label: 'None'\n}];\nconst cgpas = [{\n  value: 0,\n  label: 'Below 8'\n}, {\n  value: 1,\n  label: '8+'\n}, {\n  value: 2,\n  label: '8.5+'\n}, {\n  value: 3,\n  label: '9+'\n}, {\n  value: 4,\n  label: '9.5+'\n}]; // const propTypes = {\n//     items: PropTypes.array.isRequired,\n//     onChangePage: PropTypes.func.isRequired,\n//     initialPage: PropTypes.number\n// }\n//\n// const defaultProps = {\n//     initialPage: 1\n// }\n//\n// class Pagination extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {pager: {}};\n//     }\n//\n//     componentWillMount() {\n//         // set page if items array isn't empty\n//         if (this.props.items && this.props.items.length) {\n//             this.setPage(this.props.initialPage);\n//         }\n//     }\n//\n//     componentDidUpdate(prevProps, prevState) {\n//         // reset page if items array has changed\n//         if (this.props.items !== prevProps.items) {\n//             this.setPage(this.props.initialPage);\n//         }\n//     }\n//\n//     setPage(page) {\n//         const items = this.props.items;\n//         // get new pager object for specified page\n//         const pager = this.getPager(items.length, page);\n//\n//         if (page < 1 || page > pager.totalPages) {\n//             return;\n//         }\n//\n//         // get new page of items from items array\n//         const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n//\n//         // update state\n//         this.setState({pager: pager});\n//\n//         // call change page function in parent component\n//         this.props.onChangePage(pageOfItems);\n//     }\n//\n//     getPager(totalItems, currentPage, pageSize) {\n//         // default to first page\n//         currentPage = currentPage || 1;\n//\n//         // default page size is 10\n//         pageSize = pageSize || 10;\n//\n//         // calculate total pages\n//         const totalPages = Math.ceil(totalItems / pageSize);\n//\n//         let startPage, endPage;\n//         if (totalPages <= 10) {\n//             // less than 10 total pages so show all\n//             startPage = 1;\n//             endPage = totalPages;\n//         } else {\n//             // more than 10 total pages so calculate start and end pages\n//             if (currentPage <= 6) {\n//                 startPage = 1;\n//                 endPage = 10;\n//             } else if (currentPage + 4 >= totalPages) {\n//                 startPage = totalPages - 9;\n//                 endPage = totalPages;\n//             } else {\n//                 startPage = currentPage - 5;\n//                 endPage = currentPage + 4;\n//             }\n//         }\n//\n//         // calculate start and end item indexes\n//         const startIndex = (currentPage - 1) * pageSize;\n//         const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n//\n//         // create an array of pages to ng-repeat in the pager control\n//         const pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n//\n//         // return object with all pager properties required by the view\n//         return {\n//             totalItems: totalItems,\n//             currentPage: currentPage,\n//             pageSize: pageSize,\n//             totalPages: totalPages,\n//             startPage: startPage,\n//             endPage: endPage,\n//             startIndex: startIndex,\n//             endIndex: endIndex,\n//             pages: pages\n//         };\n//     }\n//\n//     render() {\n//         const pager = this.state.pager;\n//\n//         if (!pager.pages || pager.pages.length <= 1) {\n//             // don't display pager if there is only 1 page\n//             return null;\n//         }\n//\n//         return (\n//             <ul className=\"pagination\">\n//                 <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(1)}>First</a>\n//                 </li>\n//                 <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n//                 </li>\n//                 {pager.pages.map((page, index) =>\n//                     <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n//                         <a onClick={() => this.setPage(page)}>{page}</a>\n//                     </li>\n//                 )}\n//                 <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n//                 </li>\n//                 <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n//                 </li>\n//             </ul>\n//         );\n//     }\n// }\n//\n// Pagination.propTypes = propTypes;\n// Pagination.defaultProps = defaultProps;\n\nexport default class ProfileList extends Component {\n  componentDidMount() {\n    axios.get(`${URL}profiles/`).then(response => {\n      console.log(response);\n      this.setState({\n        profiles: response.data,\n        loading: false\n      });\n      this.updateProfiles({});\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      pageOfItems: [],\n      colleges: colleges,\n      selectedColleges: colleges.map(item => item.label),\n      genders: genders,\n      selectedGenders: genders.map(item => item.label),\n      sortTypes: sortTypes,\n      selectedSortType: sortTypes[2].label,\n      years: years,\n      selectedYears: years.map(item => item.label),\n      cgpas: cgpas,\n      selectedCGPAs: cgpas.map(item => item.label),\n      profiles: null,\n      selectedProfiles: null\n    };\n    this.onChangePage = this.onChangePage.bind(this);\n  }\n\n  onChangePage(pageOfItems) {\n    this.setState({\n      pageOfItems: pageOfItems\n    });\n  }\n\n  updateProfiles(update) {\n    let newState = Object.assign({}, this.state, update);\n    let selectedProfiles = this.state.profiles.filter(profile => {\n      return newState.selectedGenders.includes(profile.gender) && newState.selectedColleges.includes(profile.college) && newState.selectedYears.includes(profile.year) && newState.selectedCGPAs.includes(profile.cgpa);\n    });\n\n    if (newState.selectedSortType !== 'None') {\n      switch (update['selectedSortType']) {\n        case 'CodeChef Rating':\n          selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cc_rating - p1.cc_rating);\n          break;\n\n        case 'CodeForces Rating':\n          selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cf_rating - p1.cf_rating);\n          break;\n      }\n    }\n\n    newState = Object.assign({}, newState, {\n      selectedProfiles: selectedProfiles\n    });\n    this.setState(newState);\n  }\n\n  handleColleges(e) {\n    if (e === null || e.length === 0) e = this.state.colleges;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedColleges: e\n    });\n  }\n\n  handleSortType(e) {\n    if (e === null || e.length === 0) e = this.state.sortTypes[2].label;\n    e = e.label;\n    this.updateProfiles({\n      selectedSortType: e\n    });\n  }\n\n  handleGender(e) {\n    if (e === null || e.length === 0) e = this.state.genders;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedGenders: e\n    });\n  }\n\n  handleYears(e) {\n    if (e === null || e.length === 0) e = this.state.years;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedYears: e\n    });\n  }\n\n  handleCGPAs(e) {\n    if (e === null || e.length === 0) e = this.state.cgpas;\n    e = e.map(item => item.label);\n    this.updateProfiles({\n      selectedCGPAs: e\n    });\n  }\n\n  render() {\n    var _this$state$selectedP;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 3,\n            style: {\n              padding: 20,\n              paddingTop: 15\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by college\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.colleges,\n              onChange: this.handleColleges.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by year\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.years,\n              onChange: this.handleYears.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.genders,\n              onChange: this.handleGender.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Filter by cgpa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: this.state.cgpas,\n              onChange: this.handleCGPAs.bind(this),\n              isMulti: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Sort by platform rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              defaultValue: this.state.sortTypes[2],\n              options: this.state.sortTypes,\n              onChange: this.handleSortType.bind(this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: ((_this$state$selectedP = this.state.selectedProfiles) === null || _this$state$selectedP === void 0 ? void 0 : _this$state$selectedP.length) ? this.state.pageOfItems.map((item, index) => /*#__PURE__*/_jsxDEV(Profile, {\n              profile: item,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this)) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"No profiles match the provided filters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 3,\n            style: {\n              padding: 15,\n              paddingLeft: 25,\n              paddingRight: 25,\n              fontSize: 16\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              children: \"A lifetime ago, I too sought the stones. I even held one in my hand. But it cast me out, banished me here, guiding others to a treasure I cannot possess.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this), \"I have been a prey to missing out on important opportunities simply because I wasn't aware of their existence. This initiative is to help all college students out there never to miss important job listings from top-notch companies\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 10,\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(Pagination, {\n              children: [/*#__PURE__*/_jsxDEV(Pagination.First, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                children: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 350,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                children: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                children: 11\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                active: true,\n                children: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                children: 13\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                disabled: true,\n                children: 14\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Item, {\n                children: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Next, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\nconst styles = {\n  container: {\n    marginTop: 15,\n    marginBottom: 15,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#cccccc\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 25,\n    paddingRight: 25\n  },\n  text: {\n    fontSize: 18\n  },\n  icon: {\n    marginTop: 10,\n    marginRight: 10\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/aarnavjindal/WebstormProjects/techjobs/client/src/components/profile-list.component.js"],"names":["React","Component","Container","Row","Col","Pagination","Select","PropTypes","Icons","axios","URL","Profile","profile","styles","container","text","name","gender","email","year","branch_full","cgpa","college_full","cc","cc_rating","cf","cf_rating","open_source","work_ex","miscellaneous","icon","window","open","github","linkedin","resume","id","colleges","value","label","genders","years","sortTypes","cgpas","ProfileList","componentDidMount","get","then","response","console","log","setState","profiles","data","loading","updateProfiles","catch","error","constructor","props","state","pageOfItems","selectedColleges","map","item","selectedGenders","selectedSortType","selectedYears","selectedCGPAs","selectedProfiles","onChangePage","bind","update","newState","Object","assign","filter","includes","college","sort","p1","p2","handleColleges","e","length","handleSortType","handleGender","handleYears","handleCGPAs","render","padding","paddingTop","index","paddingLeft","paddingRight","fontSize","marginTop","marginBottom","borderStyle","borderWidth","borderRadius","borderColor","paddingBottom","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Container,\n    Row, Col,\n    Pagination\n} from \"react-bootstrap\"\nimport Select from \"react-select\"\nimport PropTypes from \"prop-types\"\nimport * as Icons from \"react-ionicons\";\nimport axios from 'axios';\nconst URL = 'https://techjobs100.herokuapp.com/'\n// const URL = 'http://localhost:4000/'\n\nconst Profile = ({ profile }) => {\n\n    return (\n        <Row style={styles.container} key={profile.id}>\n            <Col>\n                <Row style={styles.text}>{`${profile.name}, ${profile.gender}`}</Row>\n                <Row style={styles.text}><a href={profile.email}>{profile.email}</a></Row>\n                <Row style={styles.text}>{`${profile.year} year, ${profile.branch_full} ( CGPA - ${profile.cgpa})`}</Row>\n                <Row style={styles.text}>{`${profile.college_full} `}</Row>\n                <Row style={styles.text}>{\"CodeChef Rating -  \"}<a href={profile.cc}>{profile.cc_rating}</a></Row>\n                <Row style={styles.text}>{\"CodeForces Rating -  \"}<a href={profile.cf}>{profile.cf_rating}</a></Row>\n                <Row style={styles.text}>{`Open source experience - ${profile.open_source}`}</Row>\n                <Row style={styles.text}>{`Experience - ${profile.work_ex}`}</Row>\n                <Row style={styles.text}>{`Miscellaneous - ${profile.miscellaneous}`}</Row>\n                <Row>\n                    <Icons.LogoGithub\n                        style={styles.icon}\n                        height=\"30px\"\n                        width=\"30px\"\n                        onClick={() => window.open(profile.github, \"_blank\")}\n                    />\n                    <Icons.LogoLinkedin\n                        style={styles.icon}\n                        height=\"30px\"\n                        width=\"30px\"\n                        onClick={() => window.open(profile.linkedin, \"_blank\")}\n                    />\n                    <Icons.Document\n                        style={styles.icon}\n                        height=\"30px\"\n                        width=\"30px\"\n                        onClick={() => window.open(profile.resume, \"_blank\")}\n                    />\n                </Row>\n            </Col>\n        </Row>\n    )\n}\n\n\nconst colleges = [\n    {value: 0, label: 'IIT'},\n    {value: 1, label: 'NIT'},\n    {value: 2, label: 'DTU'},\n    {value: 3, label: 'NSIT'},\n    {value: 4, label: 'IIIT'},\n    {value: 5, label: 'BITS'},\n    {value: 6, label: 'VIT'},\n    {value: 7, label: 'Other'}\n];\nconst genders = [{value: 0, label: 'Male'}, {value: 1, label: 'Female'}];\nconst years = [{value: 0, label: '1st'}, {value: 1, label: '2nd'}, {value: 2, label: '3rd'}, {value: 4, label: '4th'}, {value: 4, label: '5th'}, {value: 5, label: 'Recent graduate'}];\nconst sortTypes = [{value: 0, label: 'CodeChef Rating'}, {value: 1, label: 'CodeForces Rating'}, { value: 2, label: 'None'}]\nconst cgpas = [{value: 0, label: 'Below 8'}, {value: 1, label: '8+'}, {value: 2, label: '8.5+'}, {value: 3, label: '9+'}, {value: 4, label: '9.5+'}];\n\n// const propTypes = {\n//     items: PropTypes.array.isRequired,\n//     onChangePage: PropTypes.func.isRequired,\n//     initialPage: PropTypes.number\n// }\n//\n// const defaultProps = {\n//     initialPage: 1\n// }\n//\n// class Pagination extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {pager: {}};\n//     }\n//\n//     componentWillMount() {\n//         // set page if items array isn't empty\n//         if (this.props.items && this.props.items.length) {\n//             this.setPage(this.props.initialPage);\n//         }\n//     }\n//\n//     componentDidUpdate(prevProps, prevState) {\n//         // reset page if items array has changed\n//         if (this.props.items !== prevProps.items) {\n//             this.setPage(this.props.initialPage);\n//         }\n//     }\n//\n//     setPage(page) {\n//         const items = this.props.items;\n//         // get new pager object for specified page\n//         const pager = this.getPager(items.length, page);\n//\n//         if (page < 1 || page > pager.totalPages) {\n//             return;\n//         }\n//\n//         // get new page of items from items array\n//         const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n//\n//         // update state\n//         this.setState({pager: pager});\n//\n//         // call change page function in parent component\n//         this.props.onChangePage(pageOfItems);\n//     }\n//\n//     getPager(totalItems, currentPage, pageSize) {\n//         // default to first page\n//         currentPage = currentPage || 1;\n//\n//         // default page size is 10\n//         pageSize = pageSize || 10;\n//\n//         // calculate total pages\n//         const totalPages = Math.ceil(totalItems / pageSize);\n//\n//         let startPage, endPage;\n//         if (totalPages <= 10) {\n//             // less than 10 total pages so show all\n//             startPage = 1;\n//             endPage = totalPages;\n//         } else {\n//             // more than 10 total pages so calculate start and end pages\n//             if (currentPage <= 6) {\n//                 startPage = 1;\n//                 endPage = 10;\n//             } else if (currentPage + 4 >= totalPages) {\n//                 startPage = totalPages - 9;\n//                 endPage = totalPages;\n//             } else {\n//                 startPage = currentPage - 5;\n//                 endPage = currentPage + 4;\n//             }\n//         }\n//\n//         // calculate start and end item indexes\n//         const startIndex = (currentPage - 1) * pageSize;\n//         const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n//\n//         // create an array of pages to ng-repeat in the pager control\n//         const pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n//\n//         // return object with all pager properties required by the view\n//         return {\n//             totalItems: totalItems,\n//             currentPage: currentPage,\n//             pageSize: pageSize,\n//             totalPages: totalPages,\n//             startPage: startPage,\n//             endPage: endPage,\n//             startIndex: startIndex,\n//             endIndex: endIndex,\n//             pages: pages\n//         };\n//     }\n//\n//     render() {\n//         const pager = this.state.pager;\n//\n//         if (!pager.pages || pager.pages.length <= 1) {\n//             // don't display pager if there is only 1 page\n//             return null;\n//         }\n//\n//         return (\n//             <ul className=\"pagination\">\n//                 <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(1)}>First</a>\n//                 </li>\n//                 <li className={pager.currentPage === 1 ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(pager.currentPage - 1)}>Previous</a>\n//                 </li>\n//                 {pager.pages.map((page, index) =>\n//                     <li key={index} className={pager.currentPage === page ? 'active' : ''}>\n//                         <a onClick={() => this.setPage(page)}>{page}</a>\n//                     </li>\n//                 )}\n//                 <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(pager.currentPage + 1)}>Next</a>\n//                 </li>\n//                 <li className={pager.currentPage === pager.totalPages ? 'disabled' : ''}>\n//                     <a onClick={() => this.setPage(pager.totalPages)}>Last</a>\n//                 </li>\n//             </ul>\n//         );\n//     }\n// }\n//\n// Pagination.propTypes = propTypes;\n// Pagination.defaultProps = defaultProps;\n\nexport default class ProfileList extends Component {\n\n    componentDidMount() {\n        axios.get(`${URL}profiles/`)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    profiles: response.data,\n                    loading: false,\n                })\n                this.updateProfiles({})\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            pageOfItems: [],\n            colleges: colleges,\n            selectedColleges: colleges.map(item => item.label),\n            genders: genders,\n            selectedGenders: genders.map(item => item.label),\n            sortTypes: sortTypes,\n            selectedSortType: sortTypes[2].label,\n            years: years,\n            selectedYears: years.map(item => item.label),\n            cgpas: cgpas,\n            selectedCGPAs: cgpas.map(item => item.label),\n            profiles: null,\n            selectedProfiles: null\n        };\n\n        this.onChangePage = this.onChangePage.bind(this);\n    }\n\n    onChangePage(pageOfItems) {\n        this.setState({pageOfItems: pageOfItems});\n    }\n\n    updateProfiles(update) {\n        let newState = Object.assign({}, this.state, update)\n        let selectedProfiles = this.state.profiles.filter(profile => {\n            return (\n                newState.selectedGenders.includes(profile.gender) &&\n                newState.selectedColleges.includes(profile.college) &&\n                newState.selectedYears.includes(profile.year) &&\n                newState.selectedCGPAs.includes(profile.cgpa)\n            )\n        })\n        if(newState.selectedSortType !== 'None' ) {\n            switch (update['selectedSortType']) {\n                case 'CodeChef Rating' :\n                    selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cc_rating - p1.cc_rating)\n                    break;\n                case 'CodeForces Rating' :\n                    selectedProfiles = selectedProfiles.sort((p1, p2) => p2.cf_rating - p1.cf_rating)\n                    break;\n            }\n        }\n        newState = Object.assign({}, newState, {selectedProfiles: selectedProfiles})\n        this.setState(newState)\n    }\n\n    handleColleges(e) {\n        if (e === null || e.length === 0) e = this.state.colleges\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedColleges: e})\n    }\n\n    handleSortType(e) {\n        if (e === null || e.length === 0) e = this.state.sortTypes[2].label\n        e = e.label\n        this.updateProfiles({selectedSortType: e})\n    }\n\n    handleGender(e) {\n        if (e === null || e.length === 0) e = this.state.genders\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedGenders: e})\n    }\n\n    handleYears(e) {\n        if (e === null || e.length === 0) e = this.state.years\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedYears: e})\n    }\n\n    handleCGPAs(e) {\n        if (e === null || e.length === 0) e = this.state.cgpas\n        e = e.map(item => item.label)\n        this.updateProfiles({selectedCGPAs: e})\n    }\n\n    render() {\n        return (\n            <>\n                <Container fluid>\n                    <Row>\n                        <Col sm={12} md={3} style={{padding: 20, paddingTop: 15}}>\n                            <h6>Filter by college</h6>\n                            <Select options={this.state.colleges} onChange={this.handleColleges.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Filter by year</h6>\n                            <Select options={this.state.years} onChange={this.handleYears.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Filter by gender</h6>\n                            <Select options={this.state.genders} onChange={this.handleGender.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Filter by cgpa</h6>\n                            <Select options={this.state.cgpas} onChange={this.handleCGPAs.bind(this)} isMulti/>\n                            <br/>\n                            <h6>Sort by platform rating</h6>\n                            <Select defaultValue={this.state.sortTypes[2]} options={this.state.sortTypes}\n                                    onChange={this.handleSortType.bind(this)}/>\n                            <br/>\n                        </Col>\n                        <Col sm={12} md={6}>\n                            {this.state.selectedProfiles?.length ? this.state.pageOfItems.map((item, index) =>\n                                <Profile profile={item} index={index}/> ) :\n                                <h5>No profiles match the provided filters</h5>\n                            }\n                        </Col>\n                        <Col sm={12} md={3} style={{padding: 15, paddingLeft: 25, paddingRight: 25, fontSize: 16}}>\n                            <i>A lifetime ago, I too sought the stones. I even held one in my hand. But it cast me out,\n                                banished me here, guiding others to a treasure I cannot possess.</i>\n                            <br/>\n                            <br/>\n                            I have been a prey to missing out on important opportunities simply because I wasn't aware\n                            of their existence. This initiative is to help all college students out there never to miss\n                            important job listings from top-notch companies\n                        </Col>\n                    </Row>\n                    <Row className=\"text-center\">\n                        <Col xs={1}/>\n                        <Col xs={10} className=\"text-center\">\n                            {/*{this.state.selectedProfiles?.length ?*/}\n                            {/*    <Pagination*/}\n                            {/*        items={this.state.selectedProfiles}*/}\n                            {/*        onChangePage={this.onChangePage}/> : null*/}\n                            {/*}*/}\n                            <Pagination>\n                                <Pagination.First />\n                                <Pagination.Prev />\n                                <Pagination.Item>{1}</Pagination.Item>\n                                <Pagination.Ellipsis />\n\n                                <Pagination.Item>{10}</Pagination.Item>\n                                <Pagination.Item>{11}</Pagination.Item>\n                                <Pagination.Item active>{12}</Pagination.Item>\n                                <Pagination.Item>{13}</Pagination.Item>\n                                <Pagination.Item disabled>{14}</Pagination.Item>\n\n                                <Pagination.Ellipsis />\n                                <Pagination.Item>{20}</Pagination.Item>\n                                <Pagination.Next />\n                                <Pagination.Last />\n                            </Pagination>\n                        </Col>\n                        <Col xs={1}/>\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\n\nconst styles = {\n    container: {\n        marginTop: 15,\n        marginBottom: 15,\n        borderStyle: \"solid\",\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: \"#cccccc\",\n        paddingTop: 15,\n        paddingBottom: 15,\n        paddingLeft: 25,\n        paddingRight: 25\n    },\n    text: {\n        fontSize: 18\n    },\n    icon: {\n        marginTop: 10,\n        marginRight: 10\n    }\n}\n"]},"metadata":{},"sourceType":"module"}