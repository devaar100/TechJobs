{"ast":null,"code":"var _jsxFileName = \"/Users/aarnavjindal/WebstormProjects/techjobs/client/src/components/job-list.component.js\";\nimport React, { Component } from 'react';\nimport { Container, Row, Col, Pagination as RBPagination } from \"react-bootstrap\";\nimport PropTypes from \"prop-types\";\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport fire from \"../fire\"; // const URL = 'https://techjobs100.herokuapp.com/'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst URL = 'http://localhost:4000/';\n\nconst Job = ({\n  job,\n  onEdit,\n  onView\n}) => {\n  const uid = fire.auth().currentUser.uid;\n  return /*#__PURE__*/_jsxDEV(Row, {\n    style: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"Company - \", job.company]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"Profile - \", job.profile]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), !_.isEmpty(job.profileURl) && /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"Profile URL - \", job.profileURl]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"Open for - \", job.openFor]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: styles.text,\n        children: [\"Description - \", job.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flexDirection: 'row',\n          marginTop: 10\n        },\n        children: [job.postedBy !== fire.auth().currentUser.uid && /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: job.uids.includes(uid),\n          style: {\n            marginLeft: -16\n          },\n          className: \"btn btn-primary\",\n          children: job.uids.includes(uid) ? 'Already applied' : 'Apply'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), job.postedBy === fire.auth().currentUser.uid && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: -16\n            },\n            onClick: () => onEdit(job),\n            className: \"btn btn-danger\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              marginLeft: 16\n            },\n            onClick: () => onView(job._id),\n            className: \"btn btn-info\",\n            children: \"View applications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, job.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Job;\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number\n};\nconst defaultProps = {\n  initialPage: 1\n};\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage(page) {\n    const items = this.props.items; // get new pager object for specified page\n\n    const pager = this.getPager(items.length, page, 5);\n\n    if (page < 1 || page > pager.totalPages) {\n      return;\n    } // get new page of items from items array\n\n\n    const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1); // update state\n\n    this.setState({\n      pager: pager\n    }); // call change page function in parent component\n\n    this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1; // default page size is 10\n\n    pageSize = pageSize || 10; // calculate total pages\n\n    const totalPages = Math.ceil(totalItems / pageSize);\n    let startPage, endPage;\n\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    } // calculate start and end item indexes\n\n\n    const startIndex = (currentPage - 1) * pageSize;\n    const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n    const pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // return object with all pager properties required by the view\n\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    const pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return /*#__PURE__*/_jsxDEV(RBPagination, {\n      size: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(RBPagination.First, {\n        onClick: () => this.setPage(1),\n        disabled: pager.currentPage === 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RBPagination.Prev, {\n        onClick: () => this.setPage(pager.currentPage - 1),\n        disabled: pager.currentPage === 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), pager.pages.map((page, index) => /*#__PURE__*/_jsxDEV(RBPagination.Item, {\n        onClick: () => this.setPage(page),\n        active: pager.currentPage === page,\n        children: page\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(RBPagination.Next, {\n        onClick: () => this.setPage(pager.currentPage + 1),\n        disabled: pager.currentPage === pager.totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RBPagination.Last, {\n        onClick: () => this.setPage(pager.totalPages),\n        disabled: pager.currentPage === pager.totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\nexport default class JobList extends Component {\n  componentDidMount() {\n    axios.get(`${URL}jobs/`).then(response => {\n      console.log(response);\n      this.setState({\n        jobs: response.data,\n        loading: false\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      pageOfItems: [],\n      jobs: []\n    };\n    this.onChangePage = this.onChangePage.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.onView = this.onView.bind(this);\n  }\n\n  onChangePage(pageOfItems) {\n    this.setState({\n      pageOfItems: pageOfItems\n    });\n  }\n\n  onEdit(job) {\n    this.props.history.push({\n      pathname: '/job',\n      state: {\n        job\n      }\n    });\n  }\n\n  onView(id) {\n    this.props.history.push({\n      pathname: '/all',\n      state: {\n        id\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              borderRadius: 15,\n              color: 'white',\n              backgroundColor: 'orange'\n            },\n            onClick: () => this.props.history.push('/job'),\n            className: \"btn\",\n            children: \"All Jobs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: 40\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              borderRadius: 15,\n              backgroundColor: 'orange'\n            },\n            onClick: () => this.props.history.push('/job'),\n            className: \"btn\",\n            children: \"My Postings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            md: 6,\n            children: this.state.jobs.length ? this.state.pageOfItems.map((item, index) => /*#__PURE__*/_jsxDEV(Job, {\n              job: item,\n              index: index,\n              onView: this.onView,\n              onEdit: this.onEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this)) : /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"No jobs available right now !\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"justify-content-center\",\n          style: {\n            paddingTop: 30,\n            paddingBottom: 50\n          },\n          children: this.state.jobs.length ? /*#__PURE__*/_jsxDEV(Pagination, {\n            items: this.state.jobs,\n            onChangePage: this.onChangePage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\nconst styles = {\n  container: {\n    marginTop: 15,\n    marginBottom: 15,\n    borderStyle: \"solid\",\n    borderWidth: 1,\n    borderRadius: 5,\n    borderColor: \"#cccccc\",\n    paddingTop: 15,\n    paddingBottom: 15,\n    paddingLeft: 25,\n    paddingRight: 25\n  },\n  text: {\n    fontSize: 18\n  },\n  icon: {\n    marginTop: 10,\n    marginRight: 10\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Job\");","map":{"version":3,"sources":["/Users/aarnavjindal/WebstormProjects/techjobs/client/src/components/job-list.component.js"],"names":["React","Component","Container","Row","Col","Pagination","RBPagination","PropTypes","axios","_","fire","URL","Job","job","onEdit","onView","uid","auth","currentUser","styles","container","text","company","profile","isEmpty","profileURl","openFor","description","flexDirection","marginTop","postedBy","uids","includes","marginLeft","_id","id","propTypes","items","array","isRequired","onChangePage","func","initialPage","number","defaultProps","constructor","props","state","pager","componentWillMount","length","setPage","componentDidUpdate","prevProps","prevState","page","getPager","totalPages","pageOfItems","slice","startIndex","endIndex","setState","totalItems","currentPage","pageSize","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","render","index","JobList","componentDidMount","get","then","response","console","log","jobs","data","loading","catch","error","bind","history","push","pathname","borderRadius","color","backgroundColor","width","item","paddingTop","paddingBottom","marginBottom","borderStyle","borderWidth","borderColor","paddingLeft","paddingRight","fontSize","icon","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Container,\n    Row, Col,\n    Pagination as RBPagination\n} from \"react-bootstrap\"\nimport PropTypes from \"prop-types\"\nimport axios from 'axios';\nimport * as _ from 'lodash';\nimport fire from \"../fire\";\n// const URL = 'https://techjobs100.herokuapp.com/'\nconst URL = 'http://localhost:4000/'\n\nconst Job = ({ job, onEdit, onView }) => {\n\n    const uid = fire.auth().currentUser.uid\n\n    return (\n        <Row style={styles.container} key={job.id}>\n            <Col>\n                <Row style={styles.text}>Company - {job.company}</Row>\n                <Row style={styles.text}>Profile - {job.profile}</Row>\n                {!_.isEmpty(job.profileURl) && <Row style={styles.text}>Profile URL - {job.profileURl}</Row>}\n                <Row style={styles.text}>Open for - {job.openFor}</Row>\n                <Row style={styles.text}>Description - {job.description}</Row>\n                <div style={{flexDirection: 'row', marginTop: 10}}>\n                    {job.postedBy!==fire.auth().currentUser.uid &&\n                        <button\n                            disabled={job.uids.includes(uid)}\n                            style={{marginLeft: -16}}\n                            className=\"btn btn-primary\">{job.uids.includes(uid) ? 'Already applied': 'Apply'}</button>\n                    }\n                    {job.postedBy===fire.auth().currentUser.uid &&\n                        <>\n                            <button\n                                style={{marginLeft: -16}}\n                                onClick={() => onEdit(job)}\n                                className=\"btn btn-danger\">Edit</button>\n                            <button\n                                style={{marginLeft: 16}}\n                                onClick={() => onView(job._id)}\n                                className=\"btn btn-info\">View applications</button>\n                        </>\n                    }\n                </div>\n            </Col>\n        </Row>\n    )\n}\n\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1\n}\n\nclass Pagination extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {pager: {}};\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n        const items = this.props.items;\n        // get new pager object for specified page\n        const pager = this.getPager(items.length, page, 5);\n\n        if (page < 1 || page > pager.totalPages) {\n            return;\n        }\n\n        // get new page of items from items array\n        const pageOfItems = items.slice(pager.startIndex, pager.endIndex + 1);\n\n        // update state\n        this.setState({pager: pager});\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculate total pages\n        const totalPages = Math.ceil(totalItems / pageSize);\n\n        let startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        const startIndex = (currentPage - 1) * pageSize;\n        const endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        const pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        const pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <RBPagination size=\"lg\">\n                <RBPagination.First\n                    onClick={() => this.setPage(1)}\n                    disabled={pager.currentPage === 1}/>\n                <RBPagination.Prev\n                    onClick={() => this.setPage(pager.currentPage - 1)}\n                    disabled={pager.currentPage === 1}/>\n                {pager.pages.map((page, index) =>\n                    <RBPagination.Item\n                        onClick={() => this.setPage(page)}\n                        key={index}\n                        active={pager.currentPage === page}>\n                        {page}\n                    </RBPagination.Item>\n                )}\n                <RBPagination.Next\n                    onClick={() => this.setPage(pager.currentPage + 1)}\n                    disabled={pager.currentPage === pager.totalPages}/>\n                <RBPagination.Last\n                    onClick={() => this.setPage(pager.totalPages)}\n                    disabled={pager.currentPage === pager.totalPages}/>\n            </RBPagination>\n        );\n    }\n}\n\nPagination.propTypes = propTypes;\nPagination.defaultProps = defaultProps;\n\nexport default class JobList extends Component {\n\n    componentDidMount() {\n        axios.get(`${URL}jobs/`)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    jobs: response.data,\n                    loading: false,\n                })\n            })\n            .catch(function (error){\n                console.log(error);\n            })\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n            pageOfItems: [],\n            jobs: []\n        };\n\n        this.onChangePage = this.onChangePage.bind(this);\n        this.onEdit = this.onEdit.bind(this);\n        this.onView = this.onView.bind(this);\n    }\n\n    onChangePage(pageOfItems) {\n        this.setState({pageOfItems: pageOfItems});\n    }\n\n    onEdit(job) {\n        this.props.history.push({\n            pathname: '/job',\n            state: {\n                job\n            }\n        })\n    }\n\n    onView(id) {\n        this.props.history.push({\n            pathname: '/all',\n            state: {\n                id\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Container fluid>\n                    <Row className=\"justify-content-center\">\n                        <button style={{borderRadius: 15, color: 'white', backgroundColor: 'orange'}} onClick={() => this.props.history.push('/job')} className=\"btn\">All Jobs</button>\n                        <div style={{width: 40}}/>\n                        <button style={{borderRadius: 15, backgroundColor: 'orange'}} onClick={() => this.props.history.push('/job')} className=\"btn\">My Postings</button>\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <Col sm={12} md={6}>\n                            {this.state.jobs.length ? this.state.pageOfItems.map((item, index) =>\n                                    <Job job={item} index={index} onView={this.onView} onEdit={this.onEdit}/> ) :\n                                <h5>No jobs available right now !</h5>\n                            }\n                        </Col>\n                    </Row>\n                    <Row className=\"justify-content-center\" style={{paddingTop: 30, paddingBottom: 50}}>\n                        {this.state.jobs.length ?\n                            <Pagination\n                                items={this.state.jobs}\n                                onChangePage={this.onChangePage}/> : null\n                        }\n                    </Row>\n                </Container>\n            </>\n        );\n    }\n}\n\nconst styles = {\n    container: {\n        marginTop: 15,\n        marginBottom: 15,\n        borderStyle: \"solid\",\n        borderWidth: 1,\n        borderRadius: 5,\n        borderColor: \"#cccccc\",\n        paddingTop: 15,\n        paddingBottom: 15,\n        paddingLeft: 25,\n        paddingRight: 25\n    },\n    text: {\n        fontSize: 18\n    },\n    icon: {\n        marginTop: 10,\n        marginRight: 10\n    }\n}\n"]},"metadata":{},"sourceType":"module"}